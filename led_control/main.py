from luma.core.interface.serial import spi, noop
from luma.led_matrix.device import max7219
from luma.core.render import canvas
import time, random

# Setup SPI
serial = spi(port=0, device=0, gpio=noop())
device = max7219(serial, cascaded=2, block_orientation=0, rotate=0)

# Eye expressions (16x8 each)
base_eyes = {
    "normal": [
        [0,0,1,1,1,1,0,0,   0,0,1,1,1,1,0,0],
        [0,1,0,0,0,0,1,0,   0,1,0,0,0,0,1,0],
        [1,0,0,0,0,0,0,1,   1,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,1,   1,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,1,   1,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,1,   1,0,0,0,0,0,0,1],
        [0,1,0,0,0,0,1,0,   0,1,0,0,0,0,1,0],
        [0,0,1,1,1,1,0,0,   0,0,1,1,1,1,0,0]
    ],
    "happy": [
        [0,0,1,1,1,1,0,0,   0,0,1,1,1,1,0,0],
        [0,1,0,0,0,0,1,0,   0,1,0,0,0,0,1,0],
        [1,0,0,0,0,0,0,1,   1,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,1,   1,0,0,0,0,0,0,1],
        [1,0,0,1,1,0,0,1,   1,0,0,1,1,0,0,1],
        [0,1,1,0,0,1,1,0,   0,1,1,0,0,1,1,0],
        [0,0,0,0,0,0,0,0,   0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,   0,0,0,0,0,0,0,0]
    ],
    "sad": [
        [0,0,1,1,1,1,0,0,   0,0,1,1,1,1,0,0],
        [0,1,0,0,0,0,1,0,   0,1,0,0,0,0,1,0],
        [1,0,0,0,0,0,0,1,   1,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,1,   1,0,0,0,0,0,0,1],
        [0,1,0,0,0,0,1,0,   0,1,0,0,0,0,1,0],
        [0,0,1,0,0,1,0,0,   0,0,1,0,0,1,0,0],
        [0,0,0,1,1,0,0,0,   0,0,0,1,1,0,0,0],
        [0,0,0,0,0,0,0,0,   0,0,0,0,0,0,0,0]
    ],
    "wink": [
        [0,0,1,1,1,1,0,0,   0,0,0,0,0,0,0,0],
        [0,1,0,0,0,0,1,0,   0,0,0,0,0,0,0,0],
        [1,0,0,0,0,0,0,1,   0,0,1,1,1,1,0,0],
        [1,0,0,0,0,0,0,1,   0,1,0,0,0,0,1,0],
        [1,0,0,0,0,0,0,1,   1,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,1,   0,0,0,0,0,0,0,0],
        [0,1,0,0,0,0,1,0,   0,0,0,0,0,0,0,0],
        [0,0,1,1,1,1,0,0,   0,0,0,0,0,0,0,0]
    ],
    "love": [
        [0,0,0,0,0,0,0,0,   0,0,0,0,0,0,0,0],
        [0,1,1,0,0,1,1,0,   0,1,1,0,0,1,1,0],
        [1,1,1,1,1,1,1,1,   1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,   1,1,1,1,1,1,1,1],
        [0,1,1,1,1,1,1,0,   0,1,1,1,1,1,1,0],
        [0,0,1,1,1,1,0,0,   0,0,1,1,1,1,0,0],
        [0,0,0,1,1,0,0,0,   0,0,0,1,1,0,0,0],
        [0,0,0,0,0,0,0,0,   0,0,0,0,0,0,0,0]
    ],
    "love2": [
        [0,0,0,0,0,0,0,0,   0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,   0,0,0,0,0,0,0,0],
        [0,1,1,0,0,1,1,0,   0,1,1,0,0,1,1,0],
        [0,1,1,1,1,1,1,0,   0,1,1,1,1,1,1,0],
        [0,0,1,1,1,1,0,0,   0,0,1,1,1,1,0,0],
        [0,0,0,1,1,0,0,0,   0,0,0,1,1,0,0,0],
        [0,0,0,0,0,0,0,0,   0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,   0,0,0,0,0,0,0,0]
    ]
}

def display_eye(eye_shape):
    with canvas(device) as draw:
        for y, row in enumerate(eye_shape):
            for x, pixel in enumerate(row):
                if pixel:
                    draw.point((x, y), fill="white")

def blink(base, duration=0.15):
    """Close eyes for a short time"""
    closed = [row[:] for row in base]
    for y in range(3,5):
        for x in range(16):
            closed[y][x] = 1
    display_eye(closed)
    time.sleep(duration)

# Main loop
while True:
    for expression in list(base_eyes.keys()):
        display_eye(base_eyes[expression])
        time.sleep(1)
